{"ast":null,"code":"/* eslint-disable */\nimport { all, takeEvery, put, call, select, take } from 'redux-saga/effects';\nimport { getDataQuestionOne } from '../../service/getData.service';\nexport function* GET_DATA_QUESTION_ONE({\n  payload\n}) {\n  // const history = useHistory()\n  const success = yield call(getDataQuestionOne); // console.log(success)\n\n  if (success) {\n    yield put({\n      type: 'data/SET_STATE',\n      payload: {\n        dataQuestionOne: success\n      }\n    });\n  }\n}\n_c = GET_DATA_QUESTION_ONE;\nexport function* GET_DATA_QUESTION_({\n  payload\n}) {\n  // const history = useHistory()\n  const success = yield call(getDataQuestionOne); // console.log(success)\n\n  if (success) {\n    yield put({\n      type: 'data/SET_STATE',\n      payload: {\n        dataQuestionOne: success\n      }\n    });\n  }\n}\n_c2 = GET_DATA_QUESTION_;\nexport default function* rootSaga() {\n  yield all([takeEvery('data/GET_DATA_QUESTION_ONE', GET_DATA_QUESTION_ONE)]);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GET_DATA_QUESTION_ONE\");\n$RefreshReg$(_c2, \"GET_DATA_QUESTION_\");","map":{"version":3,"sources":["/Users/bagusjatikuncoro/Documents/Project/moduit-fe-codingtest/src/redux/data/index.js"],"names":["all","takeEvery","put","call","select","take","getDataQuestionOne","GET_DATA_QUESTION_ONE","payload","success","type","dataQuestionOne","GET_DATA_QUESTION_","rootSaga"],"mappings":"AAAA;AACA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AAEA,OAAO,UAAUC,qBAAV,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAA6C;AAClD;AACA,QAAMC,OAAO,GAAG,MAAMN,IAAI,CAACG,kBAAD,CAA1B,CAFkD,CAGlD;;AACA,MAAIG,OAAJ,EAAa;AACX,UAAMP,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERF,MAAAA,OAAO,EAAE;AACPG,QAAAA,eAAe,EAACF;AADT;AAFD,KAAD,CAAT;AAMD;AACF;KAZgBF,qB;AAcjB,OAAO,UAAUK,kBAAV,CAA6B;AAAEJ,EAAAA;AAAF,CAA7B,EAA0C;AAC/C;AACA,QAAMC,OAAO,GAAG,MAAMN,IAAI,CAACG,kBAAD,CAA1B,CAF+C,CAG/C;;AACA,MAAIG,OAAJ,EAAa;AACX,UAAMP,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERF,MAAAA,OAAO,EAAE;AACPG,QAAAA,eAAe,EAACF;AADT;AAFD,KAAD,CAAT;AAMD;AACF;MAZgBG,kB;AAejB,eAAe,UAAUC,QAAV,GAAqB;AAClC,QAAMb,GAAG,CAAC,CACRC,SAAS,CAAC,4BAAD,EAA+BM,qBAA/B,CADD,CAAD,CAAT;AAGD","sourcesContent":["/* eslint-disable */\nimport { all, takeEvery, put, call, select, take } from 'redux-saga/effects'\nimport { getDataQuestionOne } from '../../service/getData.service'\n\nexport function* GET_DATA_QUESTION_ONE({ payload }) {\n  // const history = useHistory()\n  const success = yield call(getDataQuestionOne)\n  // console.log(success)\n  if (success) {\n    yield put({\n      type: 'data/SET_STATE',\n      payload: {\n        dataQuestionOne:success\n      },\n    })\n  }\n}\n\nexport function* GET_DATA_QUESTION_({ payload }) {\n  // const history = useHistory()\n  const success = yield call(getDataQuestionOne)\n  // console.log(success)\n  if (success) {\n    yield put({\n      type: 'data/SET_STATE',\n      payload: {\n        dataQuestionOne:success\n      },\n    })\n  }\n}\n\n\nexport default function* rootSaga() {\n  yield all([\n    takeEvery('data/GET_DATA_QUESTION_ONE', GET_DATA_QUESTION_ONE),\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}